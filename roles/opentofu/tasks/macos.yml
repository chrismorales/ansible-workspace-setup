---
- name: Check if OpenTofu is available via Homebrew
  shell: brew search opentofu
  register: brew_opentofu_search
  failed_when: false
  changed_when: false

- name: Install OpenTofu via Homebrew (if available)
  homebrew:
    name: opentofu
    state: present
  when: "'opentofu' in brew_opentofu_search.stdout"

- name: Install OpenTofu manually on macOS (if not in Homebrew)
  block:
    - name: Detect architecture
      set_fact:
        mac_arch: "{{ 'arm64' if ansible_architecture == 'arm64' else 'amd64' }}"

    - name: Get latest OpenTofu version
      uri:
        url: https://api.github.com/repos/opentofu/opentofu/releases/latest
        return_content: yes
      register: tofu_latest_release

    - name: Extract version number
      set_fact:
        tofu_version_clean: "{{ tofu_latest_release.json.tag_name | regex_replace('^v', '') }}"

    - name: Download OpenTofu for macOS
      get_url:
        url: "https://github.com/opentofu/opentofu/releases/download/v{{ tofu_version_clean }}/tofu_{{ tofu_version_clean }}_darwin_{{ mac_arch }}.zip"
        dest: /tmp/opentofu.zip
        mode: '0644'

    - name: Create temporary extraction directory
      file:
        path: /tmp/opentofu_extract
        state: directory

    - name: Extract OpenTofu
      unarchive:
        src: /tmp/opentofu.zip
        dest: /tmp/opentofu_extract
        remote_src: yes

    - name: Install OpenTofu binary
      copy:
        src: /tmp/opentofu_extract/tofu
        dest: /usr/local/bin/tofu
        mode: '0755'
        remote_src: yes

    - name: Clean up temporary files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /tmp/opentofu.zip
        - /tmp/opentofu_extract
  when: "'opentofu' not in brew_opentofu_search.stdout"